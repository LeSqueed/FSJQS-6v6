name: Create and Publish Release

on:
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'The type of version bump (patch, minor, or major)'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
        default: 'patch'

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Initialize Overpy Submodule
        run: git submodule update --init --recursive

      - name: Configure Git User
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update version in package.json
        run: npm version ${{ github.event.inputs.version_bump }} --no-git-tag-version

      - name: Read version from package.json
        id: get_version
        run: echo "new_version=v$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Create release branch
        id: create_branch
        run: |
          git checkout -b "release/${{ steps.get_version.outputs.new_version }}"
          echo "branch_name=release/${{ steps.get_version.outputs.new_version }}" >> $GITHUB_OUTPUT

      - name: Commit version bump and create tag
        run: |
          git commit -am "chore(release): version ${{ steps.get_version.outputs.new_version }}"
          # Delete the tag if it was prematurely created by npm version on the wrong commit
          git tag -d "${{ steps.get_version.outputs.new_version }}" || true
          # Create the tag on the correct commit on our release branch
          git tag "${{ steps.get_version.outputs.new_version }}"

      - name: Push release branch and tag
        run: git push origin "${{ steps.create_branch.outputs.branch_name }}" --tags

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.new_version }}
          name: "Release ${{ steps.get_version.outputs.new_version }}"
          generate_release_notes: true
          files: |
            output/workshop.txt
            output/rules.txt

      - name: Merge release branch into main
        run: |
          git checkout main
          git merge --no-ff "${{ steps.create_branch.outputs.branch_name }}"
          git push origin main
      
      - name: Merge release branch into develop
        run: |
          git checkout develop
          git merge --no-ff "${{ steps.create_branch.outputs.branch_name }}"
          git push origin develop
